{"version":3,"sources":["context/ModalsContext.tsx","hooks/useModals.ts","modules/header/Header.tsx","modules/sidebar/MenuSidebar.tsx","context/LayoutContext.tsx","hooks/useLayout.ts","modules/block/Block.tsx","modules/resolution-info/ResolutionInfo.tsx","modules/preview/Preview.tsx","modules/controls/Controls.tsx","modules/control-panel/ControlPanel.tsx","modules/constructor/Constructor.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ModalsContext","createContext","menuSidebar","setMenuSidebar","ModalsState","children","context","useState","_setMenuSidebar","state","useModals","Provider","value","Header","useContext","className","label","onClick","MenuSidebar","history","useHistory","visible","position","onHide","style","fontWeight","icon","marginRight","push","LayoutContext","currentElem","layout","setCurrentElem","setLayout","breakpoint","screenWidth","constructorRes","setConstructorRes","constructorWidth","setConstructorWidth","setAllLayouts","LayoutState","lg","md","sm","_setLayout","setScreenWidth","useEffect","console","log","setBreakpoint","useLayoutEffect","updateSize","window","innerWidth","addEventListener","removeEventListener","_setCurrentElem","_setConstructorRes","_setConstructorWidth","item","size","actualSize","prev","width","config","useLayout","Block","backgroundColor","title","text","fontColor","color","height","margin","ResolutionInfo","Preview","length","to","padding","cols","rowHeight","isDraggable","isBounded","isResizable","isDroppable","map","block","background","content","i","Controls","setInputState","setColorState","inputState","colorState","inputOnBlur","input","updatedCurrentElem","saveChanges","colorOnChange","changeContent","changedContent","operatedLayout","indexOfUpdatedElem","findIndex","updatedElem","splice","changes","newBlock","v4","h","w","x","y","htmlFor","id","type","onChange","e","target","onBlur","ControlPanel","sizes","activeIndex","setActiveIndex","onTabChange","index","tab","header","toLowerCase","Constructor","onLayoutChange","newLayout","layoutCopy","changedBlock","find","cursor","boxShadow","App","path","exact","component","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d52b1582.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nimport { useModals } from \"../hooks/useModals\";\r\n\r\nconst ModalsContext = createContext<ReturnType<typeof useModals>>({\r\n\tmenuSidebar: false,\r\n\tsetMenuSidebar: () => {},\r\n});\r\n\r\nexport const ModalsState: React.FC = ({ children }) => {\r\n\tconst context = useModals();\r\n\r\n\treturn (\r\n\t\t<ModalsContext.Provider value={context}>\r\n\t\t\t{children}\r\n\t\t</ModalsContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default ModalsContext;\r\n","import { useState } from \"react\";\r\n\r\nexport const useModals = () => {\r\n\tconst [menuSidebar, _setMenuSidebar] = useState(false);\r\n\r\n\tconst setMenuSidebar = (state: boolean) => {\r\n\t\t_setMenuSidebar(state);\r\n\t};\r\n\r\n\treturn {\r\n\t\tmenuSidebar,\r\n\t\tsetMenuSidebar,\r\n\t};\r\n};\r\n","import { Button } from \"primereact/button\";\r\nimport { useContext } from \"react\";\r\nimport ModalsContext from \"../../context/ModalsContext\";\r\nimport \"./Header.scss\";\r\n\r\nexport const Header = () => {\r\n\tconst { setMenuSidebar } = useContext(ModalsContext);\r\n\treturn (\r\n\t\t<div className=\"header\">\r\n\t\t\t<Button label=\"Open menu\" onClick={() => setMenuSidebar(true)} />\r\n\t\t\t<h1>Page constructor</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { Sidebar } from \"primereact/sidebar\";\r\nimport { Button } from \"primereact/button\";\r\nimport { useContext } from \"react\";\r\nimport ModalsContext from \"../../context/ModalsContext\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport const MenuSidebar = () => {\r\n\tconst { menuSidebar, setMenuSidebar } = useContext(ModalsContext);\r\n\tconst history = useHistory();\r\n\r\n\treturn (\r\n\t\t<Sidebar\r\n\t\t\tvisible={menuSidebar}\r\n\t\t\tposition=\"left\"\r\n\t\t\tclassName=\"ui-sidebar-sm\"\r\n\t\t\tonHide={() => setMenuSidebar(false)}\r\n\t\t>\r\n\t\t\t<h1 style={{ fontWeight: \"normal\" }}>Sidebar menu</h1>\r\n\t\t\t<Button\r\n\t\t\t\tlabel=\"Preview\"\r\n\t\t\t\ticon=\"pi pi-desktop\"\r\n\t\t\t\tclassName=\"p-button-outlined\"\r\n\t\t\t\tstyle={{ marginRight: \".25em\" }}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\thistory.push(\"/\");\r\n\t\t\t\t\tsetMenuSidebar(false);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<Button\r\n\t\t\t\ticon=\"pi pi-cog\"\r\n\t\t\t\tlabel=\"Constructor\"\r\n\t\t\t\tclassName=\"p-button-outlined\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\thistory.push(\"/constructor\");\r\n\t\t\t\t\tsetMenuSidebar(false);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Sidebar>\r\n\t);\r\n};\r\n","import { createContext } from \"react\";\r\nimport { ILayout, IResponsiveLayout, useLayout } from \"../hooks/useLayout\";\r\n\r\nconst LayoutContext = createContext<ReturnType<typeof useLayout>>({\r\n\tcurrentElem: {} as ILayout,\r\n\tlayout: {} as IResponsiveLayout,\r\n\tsetCurrentElem: () => {},\r\n\tsetLayout: () => {},\r\n\tbreakpoint: \"lg\",\r\n\tscreenWidth: 0,\r\n\tconstructorRes: \"lg\",\r\n\tsetConstructorRes: () => {},\r\n\tconstructorWidth: 0,\r\n\tsetConstructorWidth: () => {},\r\n\tsetAllLayouts: () => {},\r\n});\r\n\r\nexport const LayoutState: React.FC = ({ children }) => {\r\n\tconst context = useLayout();\r\n\treturn (\r\n\t\t<LayoutContext.Provider value={context}>\r\n\t\t\t{children}\r\n\t\t</LayoutContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default LayoutContext;\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { IBlockContent } from \"../modules/block/Block\";\r\n\r\nexport interface ILayout {\r\n\ti: string;\r\n\tx: number;\r\n\ty: number;\r\n\tw: number;\r\n\th: number;\r\n\tstatic?: boolean;\r\n\tmoved?: boolean;\r\n\tcontent: IBlockContent;\r\n}\r\n\r\nexport type SizeType = \"lg\" | \"md\" | \"sm\";\r\n\r\nexport interface IResponsiveLayout {\r\n\tlg: ILayout[];\r\n\tmd: ILayout[];\r\n\tsm: ILayout[];\r\n}\r\n\r\nexport const useLayout = () => {\r\n\tconst [layout, _setLayout] = useState<IResponsiveLayout>({\r\n\t\tlg: [],\r\n\t\tmd: [],\r\n\t\tsm: [],\r\n\t});\r\n\tconst [screenWidth, setScreenWidth] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(layout);\r\n\t}, [layout]);\r\n\r\n\tconst setLayout = (layout: ILayout[], size?: SizeType) => {\r\n\t\tconst actualSize = size || breakpoint;\r\n\t\t_setLayout((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\t[actualSize]: layout,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst setAllLayouts = (config: IResponsiveLayout) => {\r\n\t\t_setLayout(config);\r\n\t};\r\n\r\n\tconst [breakpoint, setBreakpoint] = useState<SizeType>(\"lg\");\r\n\r\n\tuseLayoutEffect(() => {\r\n\t\tfunction updateSize() {\r\n\t\t\tif (window.innerWidth >= 1200) {\r\n\t\t\t\tsetBreakpoint(\"lg\");\r\n\t\t\t} else if (window.innerWidth >= 991 && window.innerWidth < 1200) {\r\n\t\t\t\tsetBreakpoint(\"md\");\r\n\t\t\t} else if (window.innerWidth >= 768 && window.innerWidth < 991) {\r\n\t\t\t\tsetBreakpoint(\"sm\");\r\n\t\t\t}\r\n\t\t\tsetScreenWidth(window.innerWidth);\r\n\t\t}\r\n\t\twindow.addEventListener(\"resize\", updateSize);\r\n\t\tupdateSize();\r\n\t\tsetScreenWidth(window.innerWidth);\r\n\t\treturn () => window.removeEventListener(\"resize\", updateSize);\r\n\t}, []);\r\n\r\n\tconst [currentElem, _setCurrentElem] = useState<ILayout | null>(null);\r\n\r\n\tconst setCurrentElem = (item: ILayout | null) => {\r\n\t\t_setCurrentElem(item);\r\n\t};\r\n\r\n\tconst [constructorRes, _setConstructorRes] = useState<SizeType>(\"lg\");\r\n\r\n\tconst setConstructorRes = (size: SizeType) => {\r\n\t\t_setConstructorRes(size);\r\n\t};\r\n\r\n\tconst [constructorWidth, _setConstructorWidth] = useState<number>(1200);\r\n\r\n\tconst setConstructorWidth = (width: number) => {\r\n\t\t_setConstructorWidth(width);\r\n\t};\r\n\r\n\treturn {\r\n\t\tlayout,\r\n\t\tcurrentElem,\r\n\t\tsetCurrentElem,\r\n\t\tsetLayout,\r\n\t\tbreakpoint,\r\n\t\tscreenWidth,\r\n\t\tconstructorRes,\r\n\t\tsetConstructorRes,\r\n\t\tconstructorWidth,\r\n\t\tsetConstructorWidth,\r\n\t\tsetAllLayouts,\r\n\t};\r\n};\r\n","export interface IBlockContent {\r\n\ttitle: string;\r\n\ttext: string;\r\n\tfontColor: string;\r\n\tbackgroundColor: string;\r\n}\r\n\r\nexport const Block: React.FC<IBlockContent> = ({\r\n\tbackgroundColor,\r\n\ttitle,\r\n\ttext,\r\n\tfontColor,\r\n}) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tbackgroundColor: \"inherit\",\r\n\t\t\t\tcolor: `#${fontColor}`,\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>{title}</strong>\r\n\t\t\t</div>\r\n\t\t\t<p style={{ margin: 0 }}>{text}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { useContext } from \"react\";\r\nimport LayoutContext from \"../../context/LayoutContext\";\r\n\r\nexport const ResolutionInfo = () => {\r\n\tconst { screenWidth, breakpoint } = useContext(LayoutContext);\r\n\treturn (\r\n\t\t<span>\r\n\t\t\tCurrent breakpoint: <strong>{breakpoint}</strong>. Current screen\r\n\t\t\twidth: <strong>{screenWidth}</strong>\r\n\t\t</span>\r\n\t);\r\n};\r\n","import { useContext } from \"react\";\r\nimport ReactGridLayout from \"react-grid-layout\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport LayoutContext from \"../../context/LayoutContext\";\r\nimport { Block } from \"../block/Block\";\r\nimport { ResolutionInfo } from \"../resolution-info/ResolutionInfo\";\r\nimport \"./Preview.scss\";\r\n\r\nexport const Preview = () => {\r\n\tconst { layout, screenWidth, breakpoint } = useContext(LayoutContext);\r\n\r\n\tconst getLayouts = () => {\r\n\t\treturn layout[breakpoint];\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{layout[breakpoint].length === 0 ? (\r\n\t\t\t\t<div className=\"preview\">\r\n\t\t\t\t\t<h2 className=\"preview__title\">\r\n\t\t\t\t\t\tSeems like there is no blocks on current resolution.{\" \"}\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<NavLink to=\"/constructor\" className=\"preview__link\">\r\n\t\t\t\t\t\tGo to block constructor\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<ResolutionInfo />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div style={{ padding: \"0 20px\" }}>\r\n\t\t\t\t\t\t<ResolutionInfo />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<ReactGridLayout\r\n\t\t\t\t\t\tlayout={getLayouts()}\r\n\t\t\t\t\t\twidth={screenWidth}\r\n\t\t\t\t\t\tcols={12}\r\n\t\t\t\t\t\trowHeight={30}\r\n\t\t\t\t\t\tisDraggable={false}\r\n\t\t\t\t\t\tisBounded={true}\r\n\t\t\t\t\t\tisResizable={false}\r\n\t\t\t\t\t\tisDroppable={false}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{layout[breakpoint].map((block) => (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tkey={block.i}\r\n\t\t\t\t\t\t\t\tclassName=\"scroll\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tbackground: `#${block.content.backgroundColor}`,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Block {...block.content} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ReactGridLayout>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n","import { Button } from \"primereact/button\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport LayoutContext from \"../../context/LayoutContext\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { ColorPicker } from \"primereact/colorpicker\";\r\nimport { ILayout } from \"../../hooks/useLayout\";\r\n\r\ntype ContolledInput<T = HTMLInputElement> = React.ChangeEvent<T>;\r\n\r\nexport const Controls = () => {\r\n\tconst { layout, setCurrentElem, currentElem, setAllLayouts } = useContext(\r\n\t\tLayoutContext\r\n\t);\r\n\r\n\tconst addNewBlock = () => {\r\n\t\tconst newBlock = {\r\n\t\t\ti: v4(),\r\n\t\t\th: 2,\r\n\t\t\tw: 2,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\tcontent: {\r\n\t\t\t\tbackgroundColor: \"ffffff\",\r\n\t\t\t\tfontColor: \"000000\",\r\n\t\t\t\ttext: \"Content of a new block\",\r\n\t\t\t\ttitle: \"New block\",\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tsetAllLayouts({\r\n\t\t\tlg: [...layout[\"lg\"], newBlock],\r\n\t\t\tmd: [...layout[\"md\"], newBlock],\r\n\t\t\tsm: [...layout[\"sm\"], newBlock],\r\n\t\t});\r\n\r\n\t\tsetCurrentElem(newBlock);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetInputState({\r\n\t\t\ttitle: currentElem?.content.title ?? \"\",\r\n\t\t\ttext: currentElem?.content.text ?? \"\",\r\n\t\t});\r\n\t\tsetColorState({\r\n\t\t\tfontColor: currentElem?.content.fontColor ?? \"000000\",\r\n\t\t\tbackgroundColor: currentElem?.content.backgroundColor ?? \"fffffff\",\r\n\t\t});\r\n\t}, [currentElem]);\r\n\r\n\tconst [inputState, setInputState] = useState({\r\n\t\ttitle: \"\",\r\n\t\ttext: \"\",\r\n\t});\r\n\r\n\tconst [colorState, setColorState] = useState({\r\n\t\tfontColor: \"000000\",\r\n\t\tbackgroundColor: \"fffffff\",\r\n\t});\r\n\r\n\tconst inputOnBlur = (input: \"title\" | \"text\") => {\r\n\t\tif (currentElem) {\r\n\t\t\tconst updatedCurrentElem: ILayout = {\r\n\t\t\t\t...currentElem,\r\n\t\t\t\tcontent: {\r\n\t\t\t\t\t...currentElem.content,\r\n\t\t\t\t\t[input]: inputState[input],\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tsaveChanges(updatedCurrentElem);\r\n\t\t}\r\n\t};\r\n\r\n\tconst colorOnChange = (\r\n\t\tcolor: \"fontColor\" | \"backgroundColor\",\r\n\t\tvalue: string\r\n\t) => {\r\n\t\tif (currentElem) {\r\n\t\t\tconst updatedCurrentElem: ILayout = {\r\n\t\t\t\t...currentElem,\r\n\t\t\t\tcontent: {\r\n\t\t\t\t\t...currentElem.content,\r\n\t\t\t\t\t[color]: value,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tsaveChanges(updatedCurrentElem);\r\n\t\t}\r\n\t};\r\n\r\n\tconst changeContent = (layout: ILayout[], changedContent: ILayout) => {\r\n\t\tconst operatedLayout = [...layout];\r\n\t\tconst indexOfUpdatedElem = operatedLayout.findIndex(\r\n\t\t\t(block) => block.i === changedContent.i\r\n\t\t);\r\n\t\tconst updatedElem = layout[indexOfUpdatedElem];\r\n\t\tupdatedElem.content = changedContent.content;\r\n\t\tindexOfUpdatedElem !== -1 &&\r\n\t\t\toperatedLayout.splice(indexOfUpdatedElem, 1, updatedElem);\r\n\t\treturn operatedLayout;\r\n\t};\r\n\r\n\tconst saveChanges = (changes: ILayout) => {\r\n\t\tsetCurrentElem(changes);\r\n\t\tsetAllLayouts({\r\n\t\t\tlg: changeContent(layout.lg, changes),\r\n\t\t\tmd: changeContent(layout.md, changes),\r\n\t\t\tsm: changeContent(layout.sm, changes),\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button\r\n\t\t\t\tlabel=\"Add block\"\r\n\t\t\t\tclassName=\"p-button-sm p-button-success\"\r\n\t\t\t\tonClick={addNewBlock}\r\n\t\t\t/>\r\n\t\t\t{!currentElem ? (\r\n\t\t\t\t<p>Seems like there is no selected block</p>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"p-fluid p-formgrid p-grid p-mt-3\">\r\n\t\t\t\t\t<div className=\"p-field p-col-12\">\r\n\t\t\t\t\t\t<label htmlFor=\"title\">Title</label>\r\n\t\t\t\t\t\t<InputText\r\n\t\t\t\t\t\t\tid=\"title\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvalue={inputState.title}\r\n\t\t\t\t\t\t\tonChange={(e: ContolledInput) => {\r\n\t\t\t\t\t\t\t\tsetInputState((prev) => ({\r\n\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\ttitle: e.target.value,\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonBlur={() => inputOnBlur(\"title\")}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"p-field p-col-12\">\r\n\t\t\t\t\t\t<label htmlFor=\"text\">Text</label>\r\n\t\t\t\t\t\t<InputText\r\n\t\t\t\t\t\t\tid=\"text\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvalue={inputState.text}\r\n\t\t\t\t\t\t\tonChange={(e: ContolledInput) => {\r\n\t\t\t\t\t\t\t\tsetInputState((prev) => ({\r\n\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\ttext: e.target.value,\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonBlur={() => inputOnBlur(\"text\")}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"p-field p-col-6\">\r\n\t\t\t\t\t\t<label htmlFor=\"font-color\">Font color</label>\r\n\t\t\t\t\t\t<ColorPicker\r\n\t\t\t\t\t\t\tid=\"font-color\"\r\n\t\t\t\t\t\t\tvalue={colorState.fontColor}\r\n\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\tcolorOnChange(\"fontColor\", e.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"p-field p-col-6\">\r\n\t\t\t\t\t\t<label htmlFor=\"bg-color\">Bg color</label>\r\n\t\t\t\t\t\t<ColorPicker\r\n\t\t\t\t\t\t\tid=\"bg-color\"\r\n\t\t\t\t\t\t\tvalue={colorState.backgroundColor}\r\n\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\tcolorOnChange(\"backgroundColor\", e.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n","import \"./ControlPanel.scss\";\r\nimport { TabView, TabPanel } from \"primereact/tabview\";\r\nimport { useContext, useState } from \"react\";\r\nimport { SizeType } from \"../../hooks/useLayout\";\r\nimport LayoutContext from \"../../context/LayoutContext\";\r\nimport { Controls } from \"../controls/Controls\";\r\n\r\ninterface ITabChangeEvent {\r\n\toriginalEvent: Event;\r\n\tindex: number;\r\n}\r\n\r\ninterface ISizesArray {\r\n\tbreakpoint: SizeType;\r\n\twidth: number;\r\n}\r\n\r\nexport const ControlPanel = () => {\r\n\tconst sizes: ISizesArray[] = [\r\n\t\t{\r\n\t\t\tbreakpoint: \"lg\",\r\n\t\t\twidth: 1200,\r\n\t\t},\r\n\t\t{\r\n\t\t\tbreakpoint: \"md\",\r\n\t\t\twidth: 991,\r\n\t\t},\r\n\t\t{\r\n\t\t\tbreakpoint: \"sm\",\r\n\t\t\twidth: 768,\r\n\t\t},\r\n\t];\r\n\tconst [activeIndex, setActiveIndex] = useState(0);\r\n\tconst { setConstructorRes, setConstructorWidth } = useContext(LayoutContext);\r\n\tconst tabs = [\"Desktop\", \"Tablet\", \"Mobile\"];\r\n\r\n\tconst onTabChange = (e: ITabChangeEvent) => {\r\n\t\tsetActiveIndex(e.index);\r\n\t\tsetConstructorRes(sizes[e.index].breakpoint);\r\n\t\tsetConstructorWidth(sizes[e.index].width);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"control\">\r\n\t\t\t<TabView activeIndex={activeIndex} onTabChange={onTabChange}>\r\n\t\t\t\t{tabs.map((tab) => (\r\n\t\t\t\t\t<TabPanel header={tab} key={tab.toLowerCase()}>\r\n\t\t\t\t\t\t<Controls />\r\n\t\t\t\t\t</TabPanel>\r\n\t\t\t\t))}\r\n\t\t\t</TabView>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { useContext } from \"react\";\r\nimport ReactGridLayout from \"react-grid-layout\";\r\nimport LayoutContext from \"../../context/LayoutContext\";\r\nimport { ILayout } from \"../../hooks/useLayout\";\r\nimport { Block } from \"../block/Block\";\r\nimport { ControlPanel } from \"../control-panel/ControlPanel\";\r\n\r\nexport const Constructor = () => {\r\n\tconst {\r\n\t\tlayout,\r\n\t\tconstructorRes,\r\n\t\tconstructorWidth,\r\n\t\tsetLayout,\r\n\t\tsetCurrentElem,\r\n\t\tcurrentElem,\r\n\t} = useContext(LayoutContext);\r\n\r\n\tconst getConfiguredLayouts = () => {\r\n\t\treturn layout[constructorRes];\r\n\t};\r\n\r\n\tconst onLayoutChange = (newLayout: ReactGridLayout.Layout[]) => {\r\n\t\tconst layoutCopy: ILayout[] = layout[constructorRes].map((block) => {\r\n\t\t\tconst changedBlock = newLayout.find(\r\n\t\t\t\t(newBlock) => newBlock.i === block.i\r\n\t\t\t);\r\n\t\t\t// I'm too tired to deal with shit like possible changedBlock undefined status\r\n\t\t\treturn {\r\n\t\t\t\ti: changedBlock!.i,\r\n\t\t\t\tcontent: block.content,\r\n\t\t\t\tx: changedBlock!.x,\r\n\t\t\t\ty: changedBlock!.y,\r\n\t\t\t\tw: changedBlock!.w,\r\n\t\t\t\th: changedBlock!.h,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tsetLayout(layoutCopy, constructorRes);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ControlPanel />\r\n\t\t\t<div className=\"constructor\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<strong>{constructorWidth}px</strong>\r\n\t\t\t\t</span>\r\n\t\t\t\t{\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`constructor__grid`}\r\n\t\t\t\t\t\tstyle={{ width: `${constructorWidth}px` }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ReactGridLayout\r\n\t\t\t\t\t\t\tlayout={getConfiguredLayouts()}\r\n\t\t\t\t\t\t\twidth={constructorWidth}\r\n\t\t\t\t\t\t\tcols={12}\r\n\t\t\t\t\t\t\trowHeight={30}\r\n\t\t\t\t\t\t\tisBounded={true}\r\n\t\t\t\t\t\t\tonLayoutChange={onLayoutChange}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{layout[constructorRes].map((block) => (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tkey={block.i}\r\n\t\t\t\t\t\t\t\t\tclassName=\"scroll\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => setCurrentElem(block)}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tcursor: \"pointer\",\r\n\t\t\t\t\t\t\t\t\t\tboxShadow:\r\n\t\t\t\t\t\t\t\t\t\t\tblock.i === currentElem?.i\r\n\t\t\t\t\t\t\t\t\t\t\t\t? \"0 0 15px rgba(255,69,0,0.6)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \"none\",\r\n\t\t\t\t\t\t\t\t\t\tbackground: `#${block.content.backgroundColor}`,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Block {...block.content} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ReactGridLayout>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { Header } from \"./modules/header/Header\";\nimport { MenuSidebar } from \"./modules/sidebar/MenuSidebar\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport { Preview } from \"./modules/preview/Preview\";\nimport { Constructor } from \"./modules/constructor/Constructor\";\n\nconst App = () => {\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<MenuSidebar />\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact component={Preview} />\n\t\t\t\t<Route path=\"/constructor\" component={Constructor} />\n\t\t\t\t<Redirect exact from=\"**\" to={\"/\"} />\n\t\t\t</Switch>\n\t\t</>\n\t);\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { LayoutState } from \"./context/LayoutContext\";\nimport { ModalsState } from \"./context/ModalsContext\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BrowserRouter>\n\t\t\t<LayoutState>\n\t\t\t\t<ModalsState>\n\t\t\t\t\t<App />\n\t\t\t\t</ModalsState>\n\t\t\t</LayoutState>\n\t\t</BrowserRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}