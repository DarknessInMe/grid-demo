{"version":3,"sources":["context/ModalsContext.tsx","hooks/useModals.ts","modules/header/Header.tsx","modules/sidebar/MenuSidebar.tsx","context/LayoutContext.tsx","hooks/useLayout.ts","modules/block/Block.tsx","modules/resolution-info/ResolutionInfo.tsx","modules/preview/Preview.tsx","modules/add-block/AddBlockModal.tsx","modules/controls/Controls.tsx","modules/control-panel/ControlPanel.tsx","modules/constructor/Constructor.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ModalsContext","createContext","menuSidebar","setMenuSidebar","config","setConfig","setAddBlock","addBlock","ModalsState","children","context","useState","_setMenuSidebar","_setConfig","_setAddBlock","state","useModals","Provider","value","Header","useContext","className","label","onClick","MenuSidebar","history","useHistory","visible","position","onHide","style","fontWeight","icon","marginRight","push","LayoutContext","currentElem","layout","setCurrentElem","setLayout","breakpoint","screenWidth","constructorRes","setConstructorRes","constructorWidth","setConstructorWidth","setAllLayouts","LayoutState","lg","md","sm","_setLayout","setScreenWidth","useEffect","console","log","setBreakpoint","useLayoutEffect","updateSize","window","innerWidth","addEventListener","removeEventListener","_setCurrentElem","_setConstructorRes","_setConstructorWidth","item","size","actualSize","prev","width","useLayout","Block","backgroundColor","title","text","fontColor","color","height","overflow","margin","ResolutionInfo","Preview","sizedLayout","setSizedLayout","sizeLayout","operatingLayout","y","currentYBlocks","findBlocksOnCurrentY","length","resizedBlocks","distributeWidth","shiftedLayout","shiftOnX","applyChanges","changedBlocks","targetLayout","forEach","changedBlock","targetBlock","i","w","x","block","blocks","indexOfBlock","sumOfWidth","copyBlocks","to","padding","cols","rowHeight","isDraggable","isBounded","isResizable","isDroppable","compactType","preventCollision","map","background","content","AddBlockModal","inputState","setInputState","colorState","setColorState","widthState","setWidthState","addNewBlock","newBlock","v4","h","minH","maxH","header","footer","closeOnEscape","dismissableMask","htmlFor","id","type","onChange","e","target","onValueChange","showButtons","buttonLayout","step","decrementButtonClassName","incrementButtonClassName","incrementButtonIcon","decrementButtonIcon","mode","min","max","onBlur","tooltip","tooltipOptions","Controls","inputOnBlur","input","updatedCurrentElem","saveChanges","colorOnChange","changeContent","changedContent","operatedLayout","indexOfUpdatedElem","findIndex","splice","changes","widthOnChange","ControlPanel","sizes","activeIndex","setActiveIndex","onTabChange","index","tab","toLowerCase","Constructor","getConfiguredLayouts","useCallback","onLayoutChange","newLayout","layoutCopy","find","resizeHandles","cursor","boxShadow","App","path","exact","component","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d595cd6a.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nimport { useModals } from \"../hooks/useModals\";\r\n\r\nconst ModalsContext = createContext<ReturnType<typeof useModals>>({\r\n\tmenuSidebar: false,\r\n\tsetMenuSidebar: () => {},\r\n\tconfig: true,\r\n\tsetConfig: () => {},\r\n\tsetAddBlock: () => {},\r\n\taddBlock: false,\r\n});\r\n\r\nexport const ModalsState: React.FC = ({ children }) => {\r\n\tconst context = useModals();\r\n\r\n\treturn (\r\n\t\t<ModalsContext.Provider value={context}>\r\n\t\t\t{children}\r\n\t\t</ModalsContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default ModalsContext;\r\n","import { useState } from \"react\";\r\n\r\nexport const useModals = () => {\r\n\tconst [menuSidebar, _setMenuSidebar] = useState(false);\r\n\tconst [config, _setConfig] = useState(true);\r\n\tconst [addBlock, _setAddBlock] = useState(false);\r\n\r\n\tconst setAddBlock = (state: boolean) => {\r\n\t\t_setAddBlock(state);\r\n\t};\r\n\tconst setMenuSidebar = (state: boolean) => {\r\n\t\t_setMenuSidebar(state);\r\n\t};\r\n\tconst setConfig = (state: boolean) => {\r\n\t\t_setConfig(state);\r\n\t};\r\n\treturn {\r\n\t\tmenuSidebar,\r\n\t\tsetMenuSidebar,\r\n\t\tconfig,\r\n\t\tsetConfig,\r\n\t\taddBlock,\r\n\t\tsetAddBlock,\r\n\t};\r\n};\r\n","import { Button } from \"primereact/button\";\r\nimport { useContext } from \"react\";\r\nimport ModalsContext from \"../../context/ModalsContext\";\r\nimport \"./Header.scss\";\r\n\r\nexport const Header = () => {\r\n\tconst { setMenuSidebar } = useContext(ModalsContext);\r\n\treturn (\r\n\t\t<div className=\"header\">\r\n\t\t\t<Button label=\"Open menu\" onClick={() => setMenuSidebar(true)} />\r\n\t\t\t<h1>Page constructor</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { Sidebar } from \"primereact/sidebar\";\r\nimport { Button } from \"primereact/button\";\r\nimport { useContext } from \"react\";\r\nimport ModalsContext from \"../../context/ModalsContext\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport const MenuSidebar = () => {\r\n\tconst { menuSidebar, setMenuSidebar } = useContext(ModalsContext);\r\n\tconst history = useHistory();\r\n\r\n\treturn (\r\n\t\t<Sidebar\r\n\t\t\tvisible={menuSidebar}\r\n\t\t\tposition=\"left\"\r\n\t\t\tclassName=\"ui-sidebar-sm\"\r\n\t\t\tonHide={() => setMenuSidebar(false)}\r\n\t\t>\r\n\t\t\t<h1 style={{ fontWeight: \"normal\" }}>Sidebar menu</h1>\r\n\t\t\t<Button\r\n\t\t\t\tlabel=\"Preview\"\r\n\t\t\t\ticon=\"pi pi-desktop\"\r\n\t\t\t\tclassName=\"p-button-outlined\"\r\n\t\t\t\tstyle={{ marginRight: \".25em\" }}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\thistory.push(\"/\");\r\n\t\t\t\t\tsetMenuSidebar(false);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<Button\r\n\t\t\t\ticon=\"pi pi-cog\"\r\n\t\t\t\tlabel=\"Constructor\"\r\n\t\t\t\tclassName=\"p-button-outlined\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\thistory.push(\"/constructor\");\r\n\t\t\t\t\tsetMenuSidebar(false);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Sidebar>\r\n\t);\r\n};\r\n","import { createContext } from \"react\";\r\nimport { ILayout, IResponsiveLayout, useLayout } from \"../hooks/useLayout\";\r\n\r\nconst LayoutContext = createContext<ReturnType<typeof useLayout>>({\r\n\tcurrentElem: {} as ILayout,\r\n\tlayout: {} as IResponsiveLayout,\r\n\tsetCurrentElem: () => {},\r\n\tsetLayout: () => {},\r\n\tbreakpoint: \"lg\",\r\n\tscreenWidth: 0,\r\n\tconstructorRes: \"lg\",\r\n\tsetConstructorRes: () => {},\r\n\tconstructorWidth: 0,\r\n\tsetConstructorWidth: () => {},\r\n\tsetAllLayouts: () => {},\r\n});\r\n\r\nexport const LayoutState: React.FC = ({ children }) => {\r\n\tconst context = useLayout();\r\n\treturn (\r\n\t\t<LayoutContext.Provider value={context}>\r\n\t\t\t{children}\r\n\t\t</LayoutContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default LayoutContext;\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { IBlockContent } from \"../modules/block/Block\";\r\n\r\nexport interface ILayout {\r\n\ti: string;\r\n\tx: number;\r\n\ty: number;\r\n\tw: number;\r\n\th: number;\r\n\tstatic?: boolean;\r\n\tminH?: number;\r\n\tmaxH?: number;\r\n\tmoved?: boolean;\r\n\tcontent: IBlockContent;\r\n}\r\n\r\nexport type SizeType = \"lg\" | \"md\" | \"sm\";\r\n\r\nexport interface IResponsiveLayout {\r\n\tlg: ILayout[];\r\n\tmd: ILayout[];\r\n\tsm: ILayout[];\r\n}\r\n\r\nexport const useLayout = () => {\r\n\tconst [layout, _setLayout] = useState<IResponsiveLayout>({\r\n\t\tlg: [],\r\n\t\tmd: [],\r\n\t\tsm: [],\r\n\t});\r\n\tconst [screenWidth, setScreenWidth] = useState(0);\r\n\r\n\tconst setLayout = (layout: ILayout[], size?: SizeType) => {\r\n\t\tconst actualSize = size || breakpoint;\r\n\t\t_setLayout((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\t[actualSize]: layout,\r\n\t\t}));\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"layout\", layout);\r\n\t}, [layout]);\r\n\r\n\tconst setAllLayouts = (config: IResponsiveLayout) => {\r\n\t\t_setLayout(config);\r\n\t};\r\n\r\n\tconst [breakpoint, setBreakpoint] = useState<SizeType>(\"lg\");\r\n\r\n\tuseLayoutEffect(() => {\r\n\t\tfunction updateSize() {\r\n\t\t\tif (window.innerWidth >= 1200) {\r\n\t\t\t\tsetBreakpoint(\"lg\");\r\n\t\t\t} else if (window.innerWidth >= 991 && window.innerWidth < 1200) {\r\n\t\t\t\tsetBreakpoint(\"md\");\r\n\t\t\t} else if (window.innerWidth >= 768 && window.innerWidth < 991) {\r\n\t\t\t\tsetBreakpoint(\"sm\");\r\n\t\t\t}\r\n\t\t\tsetScreenWidth(window.innerWidth);\r\n\t\t}\r\n\t\twindow.addEventListener(\"resize\", updateSize);\r\n\t\tupdateSize();\r\n\t\tsetScreenWidth(window.innerWidth);\r\n\t\treturn () => window.removeEventListener(\"resize\", updateSize);\r\n\t}, []);\r\n\r\n\tconst [currentElem, _setCurrentElem] = useState<ILayout | null>(null);\r\n\r\n\tconst setCurrentElem = (item: ILayout | null) => {\r\n\t\t_setCurrentElem(item);\r\n\t};\r\n\r\n\tconst [constructorRes, _setConstructorRes] = useState<SizeType>(\"lg\");\r\n\r\n\tconst setConstructorRes = (size: SizeType) => {\r\n\t\t_setConstructorRes(size);\r\n\t};\r\n\r\n\tconst [constructorWidth, _setConstructorWidth] = useState<number>(1200);\r\n\r\n\tconst setConstructorWidth = (width: number) => {\r\n\t\t_setConstructorWidth(width);\r\n\t};\r\n\r\n\treturn {\r\n\t\tlayout,\r\n\t\tcurrentElem,\r\n\t\tsetCurrentElem,\r\n\t\tsetLayout,\r\n\t\tbreakpoint,\r\n\t\tscreenWidth,\r\n\t\tconstructorRes,\r\n\t\tsetConstructorRes,\r\n\t\tconstructorWidth,\r\n\t\tsetConstructorWidth,\r\n\t\tsetAllLayouts,\r\n\t};\r\n};\r\n","export interface IBlockContent {\r\n\ttitle: string;\r\n\ttext: string;\r\n\tfontColor: string;\r\n\tbackgroundColor: string;\r\n}\r\n\r\nexport const Block: React.FC<IBlockContent> = ({\r\n\tbackgroundColor,\r\n\ttitle,\r\n\ttext,\r\n\tfontColor,\r\n}) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tbackgroundColor: \"inherit\",\r\n\t\t\t\tcolor: `#${fontColor}`,\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\toverflow: \"scroll\",\r\n\t\t\t}}\r\n\t\t\tclassName=\"scroll\"\r\n\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>{title}</strong>\r\n\t\t\t</div>\r\n\t\t\t<p style={{ margin: 0 }}>{text}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { useContext } from \"react\";\r\nimport LayoutContext from \"../../context/LayoutContext\";\r\n\r\nexport const ResolutionInfo = () => {\r\n\tconst { screenWidth, breakpoint } = useContext(LayoutContext);\r\n\treturn (\r\n\t\t<span>\r\n\t\t\tCurrent breakpoint: <strong>{breakpoint}</strong>. Current screen\r\n\t\t\twidth: <strong>{screenWidth}</strong>\r\n\t\t</span>\r\n\t);\r\n};\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport ReactGridLayout from \"react-grid-layout\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport LayoutContext from \"../../context/LayoutContext\";\r\nimport { ILayout } from \"../../hooks/useLayout\";\r\nimport { Block } from \"../block/Block\";\r\nimport { ResolutionInfo } from \"../resolution-info/ResolutionInfo\";\r\nimport \"./Preview.scss\";\r\n\r\nexport const Preview = () => {\r\n\tconst { layout, screenWidth, breakpoint } = useContext(LayoutContext);\r\n\r\n\tconst [sizedLayout, setSizedLayout] = useState<ILayout[]>([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsizeLayout(layout[breakpoint], 0);\r\n\t\t//eslint-disable-next-line\r\n\t}, [layout, breakpoint]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"sizedLayout\", sizedLayout);\r\n\t}, [sizedLayout]);\r\n\r\n\tconst sizeLayout = (operatingLayout: ILayout[], y: number): void => {\r\n\t\tconst currentYBlocks: ILayout[] = findBlocksOnCurrentY(\r\n\t\t\toperatingLayout,\r\n\t\t\ty\r\n\t\t);\r\n\r\n\t\tif (currentYBlocks.length === 0) {\r\n\t\t\treturn setSizedLayout(operatingLayout);\r\n\t\t} else {\r\n\t\t\tconst resizedBlocks = distributeWidth(currentYBlocks, 0);\r\n\t\t\tconst shiftedLayout = shiftOnX(resizedBlocks);\r\n\t\t\tconst appliedLayout = applyChanges(shiftedLayout, operatingLayout);\r\n\r\n\t\t\treturn sizeLayout(appliedLayout, y + 2);\r\n\t\t}\r\n\t};\r\n\r\n\tconst applyChanges = (changedBlocks: ILayout[], targetLayout: ILayout[]) => {\r\n\t\tchangedBlocks.forEach((changedBlock) => {\r\n\t\t\ttargetLayout.forEach((targetBlock) => {\r\n\t\t\t\tif (changedBlock.i === targetBlock.i) {\r\n\t\t\t\t\ttargetBlock.w = changedBlock.w;\r\n\t\t\t\t\ttargetBlock.x = changedBlock.x;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn targetLayout;\r\n\t};\r\n\r\n\tconst findBlocksOnCurrentY = (operatingLayout: ILayout[], y: number) => {\r\n\t\tconst currentYBlocks: ILayout[] = [];\r\n\t\toperatingLayout.forEach((block) => {\r\n\t\t\tif (block.y === y) {\r\n\t\t\t\tcurrentYBlocks.push(block);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn currentYBlocks;\r\n\t};\r\n\r\n\tconst shiftOnX = (resizedBlocks: ILayout[]) => {\r\n\t\tlet x = 0;\r\n\t\tresizedBlocks.forEach((block) => {\r\n\t\t\tblock.x = x;\r\n\t\t\tx += block.w;\r\n\t\t});\r\n\t\treturn resizedBlocks;\r\n\t};\r\n\r\n\tconst distributeWidth = (\r\n\t\tblocks: ILayout[],\r\n\t\tindexOfBlock: number\r\n\t): ILayout[] => {\r\n\t\tlet sumOfWidth = 0;\r\n\r\n\t\tblocks.forEach((block) => {\r\n\t\t\tsumOfWidth += block.w;\r\n\t\t});\r\n\r\n\t\tif (sumOfWidth === 12) {\r\n\t\t\treturn blocks;\r\n\t\t} else {\r\n\t\t\tsumOfWidth = 0;\r\n\r\n\t\t\tconst copyBlocks: ILayout[] = blocks;\r\n\t\t\tcopyBlocks[indexOfBlock] = {\r\n\t\t\t\t...copyBlocks[indexOfBlock],\r\n\t\t\t\tw: copyBlocks[indexOfBlock].w + 1,\r\n\t\t\t};\r\n\r\n\t\t\treturn distributeWidth(\r\n\t\t\t\tcopyBlocks,\r\n\t\t\t\tcopyBlocks.length - 1 === indexOfBlock ? 0 : indexOfBlock + 1\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getLayouts = () => {\r\n\t\treturn sizedLayout;\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{layout[breakpoint].length === 0 ? (\r\n\t\t\t\t<div className=\"preview\">\r\n\t\t\t\t\t<h2 className=\"preview__title\">\r\n\t\t\t\t\t\tSeems like there are no blocks on current resolution.\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<NavLink to=\"/constructor\" className=\"preview__link\">\r\n\t\t\t\t\t\tGo to block constructor\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<ResolutionInfo />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div style={{ padding: \"0 20px\" }}>\r\n\t\t\t\t\t\t<ResolutionInfo />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<ReactGridLayout\r\n\t\t\t\t\t\tlayout={getLayouts()}\r\n\t\t\t\t\t\twidth={screenWidth}\r\n\t\t\t\t\t\tcols={12}\r\n\t\t\t\t\t\trowHeight={30}\r\n\t\t\t\t\t\tisDraggable={false}\r\n\t\t\t\t\t\tisBounded={true}\r\n\t\t\t\t\t\tisResizable={false}\r\n\t\t\t\t\t\tisDroppable={false}\r\n\t\t\t\t\t\tcompactType={null}\r\n\t\t\t\t\t\tpreventCollision={true}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{layout[breakpoint].map((block) => (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tkey={block.i}\r\n\t\t\t\t\t\t\t\tclassName=\"scroll\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tbackground: `#${block.content.backgroundColor}`,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Block {...block.content} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ReactGridLayout>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n","import { Button } from \"primereact/button\";\r\nimport { ColorPicker } from \"primereact/colorpicker\";\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport { InputNumber } from \"primereact/inputnumber\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { useContext, useState } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport LayoutContext from \"../../context/LayoutContext\";\r\nimport ModalsContext from \"../../context/ModalsContext\";\r\nimport { ILayout } from \"../../hooks/useLayout\";\r\nimport { ContolledInput } from \"../controls/Controls\";\r\n\r\nexport const AddBlockModal = () => {\r\n\tconst { addBlock, setAddBlock } = useContext(ModalsContext);\r\n\tconst { layout, setAllLayouts } = useContext(LayoutContext);\r\n\tconst [inputState, setInputState] = useState({\r\n\t\ttitle: \"\",\r\n\t\ttext: \"\",\r\n\t});\r\n\r\n\tconst [colorState, setColorState] = useState({\r\n\t\tfontColor: \"000\",\r\n\t\tbackgroundColor: \"fff\",\r\n\t});\r\n\r\n\tconst [widthState, setWidthState] = useState(1);\r\n\r\n\tconst resetToDefaultValues = () => {\r\n\t\tsetInputState({\r\n\t\t\ttext: \"\",\r\n\t\t\ttitle: \"\",\r\n\t\t});\r\n\t\tsetColorState({\r\n\t\t\tfontColor: \"000\",\r\n\t\t\tbackgroundColor: \"fff\",\r\n\t\t});\r\n\t\tsetWidthState(1);\r\n\t};\r\n\r\n\tconst addNewBlock = () => {\r\n\t\tif (inputState.title.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst newBlock: ILayout = {\r\n\t\t\ti: v4(),\r\n\t\t\th: 2,\r\n\t\t\tw: widthState,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\tminH: 2,\r\n\t\t\tmaxH: 2,\r\n\t\t\tcontent: {\r\n\t\t\t\tbackgroundColor: colorState.backgroundColor,\r\n\t\t\t\tfontColor: colorState.fontColor,\r\n\t\t\t\ttext: inputState.text,\r\n\t\t\t\ttitle: inputState.title,\r\n\t\t\t},\r\n\t\t};\r\n\t\tconsole.log(\"newBlock\", newBlock);\r\n\t\tsetAllLayouts({\r\n\t\t\tlg: [...layout[\"lg\"], newBlock],\r\n\t\t\tmd: [...layout[\"md\"], newBlock],\r\n\t\t\tsm: [...layout[\"sm\"], newBlock],\r\n\t\t});\r\n\r\n\t\tresetToDefaultValues();\r\n\t};\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\theader=\"Add new block\"\r\n\t\t\tvisible={addBlock}\r\n\t\t\tfooter={() => (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tlabel=\"Close\"\r\n\t\t\t\t\t\tclassName=\"p-button-rounded p-button-danger\"\r\n\t\t\t\t\t\tonClick={() => setAddBlock(false)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tlabel=\"Add block\"\r\n\t\t\t\t\t\tonClick={addNewBlock}\r\n\t\t\t\t\t\tclassName=\"p-button-rounded p-button-success\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\tstyle={{ width: \"50vw\" }}\r\n\t\t\tonHide={() => setAddBlock(false)}\r\n\t\t\tcloseOnEscape\r\n\t\t\tdismissableMask\r\n\t\t>\r\n\t\t\t<div className=\"p-fluid p-formgrid p-grid p-mt-3\">\r\n\t\t\t\t<div className=\"p-field p-col-12\">\r\n\t\t\t\t\t<label htmlFor=\"add-title\">Title</label>\r\n\t\t\t\t\t<InputText\r\n\t\t\t\t\t\tid=\"add-title\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={inputState.title}\r\n\t\t\t\t\t\tonChange={(e: ContolledInput) => {\r\n\t\t\t\t\t\t\tsetInputState((prev) => ({\r\n\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\ttitle: e.target.value,\r\n\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"p-field p-col-12\">\r\n\t\t\t\t\t<label htmlFor=\"add-text\">Text</label>\r\n\t\t\t\t\t<InputText\r\n\t\t\t\t\t\tid=\"add-text\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={inputState.text}\r\n\t\t\t\t\t\tonChange={(e: ContolledInput) => {\r\n\t\t\t\t\t\t\tsetInputState((prev) => ({\r\n\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\ttext: e.target.value,\r\n\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"p-field p-col-6\">\r\n\t\t\t\t\t<label htmlFor=\"font-color\">Font color</label>\r\n\t\t\t\t\t<ColorPicker\r\n\t\t\t\t\t\tid=\"font-color\"\r\n\t\t\t\t\t\tvalue={colorState.fontColor}\r\n\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\tsetColorState((prev) => ({\r\n\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\tfontColor: e.value,\r\n\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"p-field p-col-6\">\r\n\t\t\t\t\t<label htmlFor=\"add-bg-color\">Bg color</label>\r\n\t\t\t\t\t<ColorPicker\r\n\t\t\t\t\t\tid=\"add-bg-color\"\r\n\t\t\t\t\t\tvalue={colorState.backgroundColor}\r\n\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\tsetColorState((prev) => ({\r\n\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\tbackgroundColor: e.value,\r\n\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"p-field p-col-12\">\r\n\t\t\t\t\t<label htmlFor=\"add-width\">Width</label>\r\n\r\n\t\t\t\t\t<InputNumber\r\n\t\t\t\t\t\tid=\"add-width\"\r\n\t\t\t\t\t\tvalue={widthState}\r\n\t\t\t\t\t\tonValueChange={(e) => {\r\n\t\t\t\t\t\t\tsetWidthState(e.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tshowButtons\r\n\t\t\t\t\t\tbuttonLayout=\"horizontal\"\r\n\t\t\t\t\t\tstep={1}\r\n\t\t\t\t\t\tdecrementButtonClassName=\"p-button-danger\"\r\n\t\t\t\t\t\tincrementButtonClassName=\"p-button-success\"\r\n\t\t\t\t\t\tincrementButtonIcon=\"pi pi-plus\"\r\n\t\t\t\t\t\tdecrementButtonIcon=\"pi pi-minus\"\r\n\t\t\t\t\t\tmode=\"decimal\"\r\n\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\tmax={12}\r\n\t\t\t\t\t\tonBlur={() => {}}\r\n\t\t\t\t\t\ttooltip={\r\n\t\t\t\t\t\t\t\"Screen is represented as 12-col grid. Choose how many columns your block will occupy\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttooltipOptions={{\r\n\t\t\t\t\t\t\tposition: \"top\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Dialog>\r\n\t);\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport LayoutContext from \"../../context/LayoutContext\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { ColorPicker } from \"primereact/colorpicker\";\r\nimport { ILayout } from \"../../hooks/useLayout\";\r\nimport { InputNumber } from \"primereact/inputnumber\";\r\n\r\nexport type ContolledInput<T = HTMLInputElement> = React.ChangeEvent<T>;\r\n\r\nexport const Controls = () => {\r\n\tconst { layout, setCurrentElem, currentElem, setAllLayouts } = useContext(\r\n\t\tLayoutContext\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetInputState({\r\n\t\t\ttitle: currentElem?.content.title ?? \"\",\r\n\t\t\ttext: currentElem?.content.text ?? \"\",\r\n\t\t});\r\n\t\tsetColorState({\r\n\t\t\tfontColor: currentElem?.content.fontColor ?? \"000\",\r\n\t\t\tbackgroundColor: currentElem?.content.backgroundColor ?? \"fff\",\r\n\t\t});\r\n\r\n\t\tsetWidthState(currentElem?.w ?? 2);\r\n\t}, [currentElem]);\r\n\r\n\tconst [inputState, setInputState] = useState({\r\n\t\ttitle: \"\",\r\n\t\ttext: \"\",\r\n\t});\r\n\r\n\tconst [colorState, setColorState] = useState({\r\n\t\tfontColor: \"000\",\r\n\t\tbackgroundColor: \"fff\",\r\n\t});\r\n\r\n\tconst [widthState, setWidthState] = useState(2);\r\n\r\n\tconst widthOnChange = (value: number) => {\r\n\t\tif (currentElem) {\r\n\t\t\tconst updatedCurrentElem: ILayout = {\r\n\t\t\t\t...currentElem,\r\n\t\t\t\tw: value,\r\n\t\t\t};\r\n\t\t\tsaveChanges(updatedCurrentElem);\r\n\t\t}\r\n\t};\r\n\r\n\tconst inputOnBlur = (input: \"title\" | \"text\") => {\r\n\t\tif (currentElem) {\r\n\t\t\tconst updatedCurrentElem: ILayout = {\r\n\t\t\t\t...currentElem,\r\n\t\t\t\tcontent: {\r\n\t\t\t\t\t...currentElem.content,\r\n\t\t\t\t\t[input]: inputState[input],\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tsaveChanges(updatedCurrentElem);\r\n\t\t}\r\n\t};\r\n\r\n\tconst colorOnChange = (\r\n\t\tcolor: \"fontColor\" | \"backgroundColor\",\r\n\t\tvalue: string\r\n\t) => {\r\n\t\tif (currentElem) {\r\n\t\t\tconst updatedCurrentElem: ILayout = {\r\n\t\t\t\t...currentElem,\r\n\t\t\t\tcontent: {\r\n\t\t\t\t\t...currentElem.content,\r\n\t\t\t\t\t[color]: value,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tsaveChanges(updatedCurrentElem);\r\n\t\t}\r\n\t};\r\n\r\n\tconst changeContent = (layout: ILayout[], changedContent: ILayout) => {\r\n\t\tconst operatedLayout = [...layout];\r\n\t\tconst indexOfUpdatedElem = operatedLayout.findIndex(\r\n\t\t\t(block) => block.i === changedContent.i\r\n\t\t);\r\n\t\tindexOfUpdatedElem !== -1 &&\r\n\t\t\toperatedLayout.splice(indexOfUpdatedElem, 1, changedContent);\r\n\t\tconsole.log(\"changedContent\", changedContent);\r\n\t\treturn operatedLayout;\r\n\t};\r\n\r\n\tconst saveChanges = (changes: ILayout) => {\r\n\t\tsetCurrentElem(changes);\r\n\t\tsetAllLayouts({\r\n\t\t\tlg: changeContent(layout.lg, changes),\r\n\t\t\tmd: changeContent(layout.md, changes),\r\n\t\t\tsm: changeContent(layout.sm, changes),\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!currentElem ? (\r\n\t\t\t\t<p>Seems like there is no selected block</p>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"p-fluid p-formgrid p-grid p-mt-3\">\r\n\t\t\t\t\t<div className=\"p-field p-col-12\">\r\n\t\t\t\t\t\t<label htmlFor=\"title\">Title</label>\r\n\t\t\t\t\t\t<InputText\r\n\t\t\t\t\t\t\tid=\"title\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvalue={inputState.title}\r\n\t\t\t\t\t\t\tonChange={(e: ContolledInput) => {\r\n\t\t\t\t\t\t\t\tsetInputState((prev) => ({\r\n\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\ttitle: e.target.value,\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonBlur={() => inputOnBlur(\"title\")}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"p-field p-col-12\">\r\n\t\t\t\t\t\t<label htmlFor=\"text\">Text</label>\r\n\t\t\t\t\t\t<InputText\r\n\t\t\t\t\t\t\tid=\"text\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvalue={inputState.text}\r\n\t\t\t\t\t\t\tonChange={(e: ContolledInput) => {\r\n\t\t\t\t\t\t\t\tsetInputState((prev) => ({\r\n\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\ttext: e.target.value,\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonBlur={() => inputOnBlur(\"text\")}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"p-field p-col-6\">\r\n\t\t\t\t\t\t<label htmlFor=\"font-color\">Font color</label>\r\n\t\t\t\t\t\t<ColorPicker\r\n\t\t\t\t\t\t\tid=\"font-color\"\r\n\t\t\t\t\t\t\tvalue={colorState.fontColor}\r\n\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\tcolorOnChange(\"fontColor\", e.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"p-field p-col-6\">\r\n\t\t\t\t\t\t<label htmlFor=\"bg-color\">Bg color</label>\r\n\t\t\t\t\t\t<ColorPicker\r\n\t\t\t\t\t\t\tid=\"bg-color\"\r\n\t\t\t\t\t\t\tvalue={colorState.backgroundColor}\r\n\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\tcolorOnChange(\"backgroundColor\", e.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"p-field p-col-12\">\r\n\t\t\t\t\t\t<label htmlFor=\"width\">Width</label>\r\n\r\n\t\t\t\t\t\t<InputNumber\r\n\t\t\t\t\t\t\tid=\"width\"\r\n\t\t\t\t\t\t\tvalue={widthState}\r\n\t\t\t\t\t\t\tonValueChange={(e) => {\r\n\t\t\t\t\t\t\t\twidthOnChange(e.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tshowButtons\r\n\t\t\t\t\t\t\tbuttonLayout=\"horizontal\"\r\n\t\t\t\t\t\t\tstep={1}\r\n\t\t\t\t\t\t\tdecrementButtonClassName=\"p-button-danger\"\r\n\t\t\t\t\t\t\tincrementButtonClassName=\"p-button-success\"\r\n\t\t\t\t\t\t\tincrementButtonIcon=\"pi pi-plus\"\r\n\t\t\t\t\t\t\tdecrementButtonIcon=\"pi pi-minus\"\r\n\t\t\t\t\t\t\tmode=\"decimal\"\r\n\t\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\t\tmax={12}\r\n\t\t\t\t\t\t\tonBlur={() => {}}\r\n\t\t\t\t\t\t\ttooltip={\r\n\t\t\t\t\t\t\t\t\"Screen is represented as 12-col grid. Choose how many columns your block will occupy\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttooltipOptions={{\r\n\t\t\t\t\t\t\t\tposition: \"top\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n","import \"./ControlPanel.scss\";\r\nimport { TabView, TabPanel } from \"primereact/tabview\";\r\nimport { useContext, useState } from \"react\";\r\nimport { SizeType } from \"../../hooks/useLayout\";\r\nimport LayoutContext from \"../../context/LayoutContext\";\r\nimport { Controls } from \"../controls/Controls\";\r\nimport ModalsContext from \"../../context/ModalsContext\";\r\nimport { Button } from \"primereact/button\";\r\n\r\ninterface ITabChangeEvent {\r\n\toriginalEvent: Event;\r\n\tindex: number;\r\n}\r\n\r\ninterface ISizesArray {\r\n\tbreakpoint: SizeType;\r\n\twidth: number;\r\n}\r\n\r\nexport const ControlPanel = () => {\r\n\tconst sizes: ISizesArray[] = [\r\n\t\t{\r\n\t\t\tbreakpoint: \"lg\",\r\n\t\t\twidth: 1200,\r\n\t\t},\r\n\t\t{\r\n\t\t\tbreakpoint: \"md\",\r\n\t\t\twidth: 991,\r\n\t\t},\r\n\t\t{\r\n\t\t\tbreakpoint: \"sm\",\r\n\t\t\twidth: 768,\r\n\t\t},\r\n\t];\r\n\tconst [activeIndex, setActiveIndex] = useState(0);\r\n\tconst { setConstructorRes, setConstructorWidth } = useContext(LayoutContext);\r\n\tconst { setConfig, setAddBlock } = useContext(ModalsContext);\r\n\tconst tabs = [\"Desktop\", \"Tablet\", \"Mobile\"];\r\n\r\n\tconst onTabChange = (e: ITabChangeEvent) => {\r\n\t\tsetActiveIndex(e.index);\r\n\t\tsetConstructorRes(sizes[e.index].breakpoint);\r\n\t\tsetConstructorWidth(sizes[e.index].width);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"control\">\r\n\t\t\t<div className=\"p-d-flex p-jc-between\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tlabel=\"Add block\"\r\n\t\t\t\t\tclassName=\"p-button-sm p-button-success\"\r\n\t\t\t\t\tonClick={() => setAddBlock(true)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ticon=\"pi pi-times\"\r\n\t\t\t\t\tclassName=\"p-button-rounded p-button-danger p-button-outlined p-button-sm\"\r\n\t\t\t\t\tonClick={() => setConfig(false)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<TabView activeIndex={activeIndex} onTabChange={onTabChange}>\r\n\t\t\t\t{tabs.map((tab) => (\r\n\t\t\t\t\t<TabPanel header={tab} key={tab.toLowerCase()}>\r\n\t\t\t\t\t\t<Controls />\r\n\t\t\t\t\t</TabPanel>\r\n\t\t\t\t))}\r\n\t\t\t</TabView>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { Button } from \"primereact/button\";\r\nimport { useCallback, useContext } from \"react\";\r\nimport ReactGridLayout from \"react-grid-layout\";\r\nimport LayoutContext from \"../../context/LayoutContext\";\r\nimport ModalsContext from \"../../context/ModalsContext\";\r\nimport { ILayout } from \"../../hooks/useLayout\";\r\nimport { AddBlockModal } from \"../add-block/AddBlockModal\";\r\nimport { Block } from \"../block/Block\";\r\nimport { ControlPanel } from \"../control-panel/ControlPanel\";\r\n\r\nexport const Constructor = () => {\r\n\tconst {\r\n\t\tlayout,\r\n\t\tconstructorRes,\r\n\t\tconstructorWidth,\r\n\t\tsetLayout,\r\n\t\tsetCurrentElem,\r\n\t\tcurrentElem,\r\n\t} = useContext(LayoutContext);\r\n\r\n\tconst { config, setConfig } = useContext(ModalsContext);\r\n\r\n\tconst getConfiguredLayouts = useCallback(() => {\r\n\t\treturn layout[constructorRes];\r\n\t}, [layout, constructorRes]);\r\n\r\n\tconst onLayoutChange = (newLayout: ReactGridLayout.Layout[]) => {\r\n\t\tconst layoutCopy: ILayout[] = layout[constructorRes].map((block) => {\r\n\t\t\tconst changedBlock = newLayout.find(\r\n\t\t\t\t(newBlock) => newBlock.i === block.i\r\n\t\t\t);\r\n\t\t\t// I'm too tired to deal with shit like possible changedBlock undefined status\r\n\t\t\treturn {\r\n\t\t\t\ti: changedBlock!.i,\r\n\t\t\t\tcontent: block.content,\r\n\t\t\t\tx: changedBlock!.x,\r\n\t\t\t\ty: changedBlock!.y,\r\n\t\t\t\tw: changedBlock!.w,\r\n\t\t\t\th: changedBlock!.h,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tsetLayout(layoutCopy, constructorRes);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<AddBlockModal />\r\n\t\t\t{config ? (\r\n\t\t\t\t<ControlPanel />\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"controls-button\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tlabel=\"Show controls\"\r\n\t\t\t\t\t\tclassName=\"p-button-rounded p-button-warning\"\r\n\t\t\t\t\t\tonClick={() => setConfig(true)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div className=\"constructor\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<strong>{constructorWidth}px</strong>\r\n\t\t\t\t</span>\r\n\t\t\t\t{\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`constructor__grid`}\r\n\t\t\t\t\t\tstyle={{ width: `${constructorWidth}px` }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ReactGridLayout\r\n\t\t\t\t\t\t\tlayout={getConfiguredLayouts()}\r\n\t\t\t\t\t\t\twidth={constructorWidth}\r\n\t\t\t\t\t\t\tcols={12}\r\n\t\t\t\t\t\t\trowHeight={30}\r\n\t\t\t\t\t\t\t// isBounded={true}\r\n\t\t\t\t\t\t\t// compactType={null}\r\n\t\t\t\t\t\t\tonLayoutChange={onLayoutChange}\r\n\t\t\t\t\t\t\tresizeHandles={[\"sw\", \"nw\", \"se\", \"ne\"]}\r\n\t\t\t\t\t\t\t// preventCollision={true}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{layout[constructorRes].map((block) => (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tkey={block.i}\r\n\t\t\t\t\t\t\t\t\tonClick={() => setCurrentElem(block)}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tcursor: \"pointer\",\r\n\t\t\t\t\t\t\t\t\t\tboxShadow:\r\n\t\t\t\t\t\t\t\t\t\t\tblock.i === currentElem?.i\r\n\t\t\t\t\t\t\t\t\t\t\t\t? \"0 0 15px rgba(255,69,0,0.6)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \"none\",\r\n\t\t\t\t\t\t\t\t\t\tbackground: `#${block.content.backgroundColor}`,\r\n\t\t\t\t\t\t\t\t\t\tpadding: \"0 20px\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Block {...block.content} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ReactGridLayout>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { Header } from \"./modules/header/Header\";\nimport { MenuSidebar } from \"./modules/sidebar/MenuSidebar\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport { Preview } from \"./modules/preview/Preview\";\nimport { Constructor } from \"./modules/constructor/Constructor\";\n\nconst App = () => {\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<MenuSidebar />\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact component={Preview} />\n\t\t\t\t<Route path=\"/constructor\" component={Constructor} />\n\t\t\t\t<Redirect exact from=\"**\" to={\"/\"} />\n\t\t\t</Switch>\n\t\t</>\n\t);\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { LayoutState } from \"./context/LayoutContext\";\nimport { ModalsState } from \"./context/ModalsContext\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<HashRouter>\n\t\t\t<LayoutState>\n\t\t\t\t<ModalsState>\n\t\t\t\t\t<App />\n\t\t\t\t</ModalsState>\n\t\t\t</LayoutState>\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}