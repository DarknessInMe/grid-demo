{"version":3,"sources":["context/ModalsContext.tsx","hooks/useModals.ts","modules/header/Header.tsx","modules/sidebar/MenuSidebar.tsx","context/LayoutContext.tsx","hooks/useLayout.ts","modules/block/Block.tsx","modules/preview/Preview.tsx","modules/controls/Controls.tsx","modules/control-panel/ControlPanel.tsx","modules/constructor/Constructor.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ModalsContext","createContext","menuSidebar","setMenuSidebar","ModalsState","children","context","useState","_setMenuSidebar","state","useModals","Provider","value","Header","useContext","className","label","onClick","MenuSidebar","history","useHistory","visible","position","onHide","style","fontWeight","icon","marginRight","push","LayoutContext","currentElem","layout","setCurrentElem","setLayout","breakpoint","screenWidth","constructorRes","setConstructorRes","constructorWidth","setConstructorWidth","LayoutState","lg","md","sm","_setLayout","setScreenWidth","setBreakpoint","useLayoutEffect","updateSize","window","innerWidth","addEventListener","removeEventListener","_setCurrentElem","_setConstructorRes","_setConstructorWidth","item","size","actualSize","prev","width","useLayout","Block","backgroundColor","title","text","fontColor","color","height","margin","Preview","cols","rowHeight","isDraggable","isBounded","isResizable","isDroppable","map","block","content","i","Controls","useEffect","setInputState","setColorState","bgColor","inputState","colorState","layoutCopy","newBlock","v4","h","w","x","y","htmlFor","id","type","onChange","e","target","updatedCurrentElem","console","log","operatedLayout","indexOfUpdatedElem","findIndex","splice","ControlPanel","sizes","activeIndex","setActiveIndex","onTabChange","index","tab","header","Constructor","onLayoutChange","newLayout","changedBlock","find","nl","cursor","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8faba6f8.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nimport { useModals } from \"../hooks/useModals\";\r\n\r\nconst ModalsContext = createContext<ReturnType<typeof useModals>>({\r\n\tmenuSidebar: false,\r\n\tsetMenuSidebar: () => {},\r\n});\r\n\r\nexport const ModalsState: React.FC = ({ children }) => {\r\n\tconst context = useModals();\r\n\r\n\treturn (\r\n\t\t<ModalsContext.Provider value={context}>\r\n\t\t\t{children}\r\n\t\t</ModalsContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default ModalsContext;\r\n","import { useState } from \"react\";\r\n\r\nexport const useModals = () => {\r\n\tconst [menuSidebar, _setMenuSidebar] = useState(false);\r\n\r\n\tconst setMenuSidebar = (state: boolean) => {\r\n\t\t_setMenuSidebar(state);\r\n\t};\r\n\r\n\treturn {\r\n\t\tmenuSidebar,\r\n\t\tsetMenuSidebar,\r\n\t};\r\n};\r\n","import { Button } from \"primereact/button\";\r\nimport { useContext } from \"react\";\r\nimport ModalsContext from \"../../context/ModalsContext\";\r\nimport \"./Header.scss\";\r\n\r\nexport const Header = () => {\r\n\tconst { setMenuSidebar } = useContext(ModalsContext);\r\n\treturn (\r\n\t\t<div className=\"header\">\r\n\t\t\t<Button label=\"Open menu\" onClick={() => setMenuSidebar(true)} />\r\n\t\t\t<h1>Page constructor</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { Sidebar } from \"primereact/sidebar\";\r\nimport { Button } from \"primereact/button\";\r\nimport { useContext } from \"react\";\r\nimport ModalsContext from \"../../context/ModalsContext\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport const MenuSidebar = () => {\r\n\tconst { menuSidebar, setMenuSidebar } = useContext(ModalsContext);\r\n\tconst history = useHistory();\r\n\r\n\treturn (\r\n\t\t<Sidebar\r\n\t\t\tvisible={menuSidebar}\r\n\t\t\tposition=\"left\"\r\n\t\t\tclassName=\"ui-sidebar-sm\"\r\n\t\t\tonHide={() => setMenuSidebar(false)}\r\n\t\t>\r\n\t\t\t<h1 style={{ fontWeight: \"normal\" }}>Sidebar menu</h1>\r\n\t\t\t<Button\r\n\t\t\t\tlabel=\"Preview\"\r\n\t\t\t\ticon=\"pi pi-desktop\"\r\n\t\t\t\tclassName=\"p-button-outlined\"\r\n\t\t\t\tstyle={{ marginRight: \".25em\" }}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\thistory.push(\"/\");\r\n\t\t\t\t\tsetMenuSidebar(false);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<Button\r\n\t\t\t\ticon=\"pi pi-cog\"\r\n\t\t\t\tlabel=\"Constructor\"\r\n\t\t\t\tclassName=\"p-button-outlined\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\thistory.push(\"/constructor\");\r\n\t\t\t\t\tsetMenuSidebar(false);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Sidebar>\r\n\t);\r\n};\r\n","import { createContext } from \"react\";\r\nimport { ILayout, IResponsiveLayout, useLayout } from \"../hooks/useLayout\";\r\n\r\nconst LayoutContext = createContext<ReturnType<typeof useLayout>>({\r\n\tcurrentElem: {} as ILayout,\r\n\tlayout: {} as IResponsiveLayout,\r\n\tsetCurrentElem: () => {},\r\n\tsetLayout: () => {},\r\n\tbreakpoint: \"lg\",\r\n\tscreenWidth: 0,\r\n\tconstructorRes: \"lg\",\r\n\tsetConstructorRes: () => {},\r\n\tconstructorWidth: 0,\r\n\tsetConstructorWidth: () => {},\r\n});\r\n\r\nexport const LayoutState: React.FC = ({ children }) => {\r\n\tconst context = useLayout();\r\n\treturn (\r\n\t\t<LayoutContext.Provider value={context}>\r\n\t\t\t{children}\r\n\t\t</LayoutContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default LayoutContext;\r\n","import { useLayoutEffect, useState } from \"react\";\r\nimport { IBlockContent } from \"../modules/block/Block\";\r\n\r\nexport interface ILayout {\r\n\ti: string;\r\n\tx: number;\r\n\ty: number;\r\n\tw: number;\r\n\th: number;\r\n\tstatic?: boolean;\r\n\tmoved?: boolean;\r\n\tcontent: IBlockContent;\r\n}\r\n\r\nexport type SizeType = \"lg\" | \"md\" | \"sm\";\r\n\r\nexport interface IResponsiveLayout {\r\n\tlg: ILayout[];\r\n\tmd: ILayout[];\r\n\tsm: ILayout[];\r\n}\r\n\r\nexport const useLayout = () => {\r\n\tconst [layout, _setLayout] = useState<IResponsiveLayout>({\r\n\t\tlg: [],\r\n\t\tmd: [],\r\n\t\tsm: [],\r\n\t});\r\n\tconst [screenWidth, setScreenWidth] = useState(0);\r\n\r\n\tconst setLayout = (layout: ILayout[], size?: SizeType) => {\r\n\t\tconst actualSize = size || breakpoint;\r\n\t\t_setLayout((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\t[actualSize]: layout,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst [breakpoint, setBreakpoint] = useState<SizeType>(\"lg\");\r\n\r\n\tuseLayoutEffect(() => {\r\n\t\tfunction updateSize() {\r\n\t\t\tif (window.innerWidth >= 1200) {\r\n\t\t\t\tsetBreakpoint(\"lg\");\r\n\t\t\t} else if (window.innerWidth >= 991 && window.innerWidth < 1200) {\r\n\t\t\t\tsetBreakpoint(\"md\");\r\n\t\t\t} else if (window.innerWidth >= 768 && window.innerWidth < 991) {\r\n\t\t\t\tsetBreakpoint(\"sm\");\r\n\t\t\t}\r\n\t\t\tsetScreenWidth(window.innerWidth);\r\n\t\t}\r\n\t\twindow.addEventListener(\"resize\", updateSize);\r\n\t\tupdateSize();\r\n\t\tsetScreenWidth(window.innerWidth);\r\n\t\treturn () => window.removeEventListener(\"resize\", updateSize);\r\n\t}, []);\r\n\r\n\tconst [currentElem, _setCurrentElem] = useState<ILayout | null>(null);\r\n\r\n\tconst setCurrentElem = (item: ILayout | null) => {\r\n\t\t_setCurrentElem(item);\r\n\t};\r\n\r\n\tconst [constructorRes, _setConstructorRes] = useState<SizeType>(\"lg\");\r\n\r\n\tconst setConstructorRes = (size: SizeType) => {\r\n\t\t_setConstructorRes(size);\r\n\t};\r\n\r\n\tconst [constructorWidth, _setConstructorWidth] = useState<number>(1200);\r\n\r\n\tconst setConstructorWidth = (width: number) => {\r\n\t\t_setConstructorWidth(width);\r\n\t};\r\n\r\n\treturn {\r\n\t\tlayout,\r\n\t\tcurrentElem,\r\n\t\tsetCurrentElem,\r\n\t\tsetLayout,\r\n\t\tbreakpoint,\r\n\t\tscreenWidth,\r\n\t\tconstructorRes,\r\n\t\tsetConstructorRes,\r\n\t\tconstructorWidth,\r\n\t\tsetConstructorWidth,\r\n\t};\r\n};\r\n","export interface IBlockContent {\r\n\ttitle: string;\r\n\ttext: string;\r\n\tfontColor: string;\r\n\tbackgroundColor: string;\r\n}\r\n\r\nexport const Block: React.FC<IBlockContent> = ({\r\n\tbackgroundColor,\r\n\ttitle,\r\n\ttext,\r\n\tfontColor,\r\n}) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tbackgroundColor,\r\n\t\t\t\tcolor: fontColor,\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>{title}</strong>\r\n\t\t\t</div>\r\n\t\t\t<p style={{ margin: 0 }}>{text}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { useContext } from \"react\";\r\nimport ReactGridLayout from \"react-grid-layout\";\r\nimport LayoutContext from \"../../context/LayoutContext\";\r\nimport { Block } from \"../block/Block\";\r\n\r\nexport const Preview = () => {\r\n\tconst { layout, screenWidth, breakpoint } = useContext(LayoutContext);\r\n\r\n\tconst getLayouts = () => {\r\n\t\treturn layout[breakpoint];\r\n\t};\r\n\treturn (\r\n\t\t<ReactGridLayout\r\n\t\t\tlayout={getLayouts()}\r\n\t\t\twidth={screenWidth}\r\n\t\t\tcols={12}\r\n\t\t\trowHeight={30}\r\n\t\t\tisDraggable={false}\r\n\t\t\tisBounded={true}\r\n\t\t\tisResizable={false}\r\n\t\t\tisDroppable={false}\r\n\t\t>\r\n\t\t\t{layout[breakpoint].map((block) => (\r\n\t\t\t\t<div key={block.i} className=\"scroll\">\r\n\t\t\t\t\t<Block {...block.content} />\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</ReactGridLayout>\r\n\t);\r\n};\r\n","import { Button } from \"primereact/button\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport LayoutContext from \"../../context/LayoutContext\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { ColorPicker } from \"primereact/colorpicker\";\r\n\r\ntype ContolledInput<T = HTMLInputElement> = React.ChangeEvent<T>;\r\n\r\nexport const Controls = () => {\r\n\tconst {\r\n\t\tlayout,\r\n\t\tsetLayout,\r\n\t\tconstructorRes,\r\n\t\tsetCurrentElem,\r\n\t\tcurrentElem,\r\n\t} = useContext(LayoutContext);\r\n\r\n\tconst addNewBlock = () => {\r\n\t\tconst layoutCopy = [...layout[constructorRes]];\r\n\t\tconst newBlock = {\r\n\t\t\ti: v4(),\r\n\t\t\th: 2,\r\n\t\t\tw: 2,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\tcontent: {\r\n\t\t\t\tbackgroundColor: \"#ffffff\",\r\n\t\t\t\tfontColor: \"#000000\",\r\n\t\t\t\ttext: \"Content of a new block\",\r\n\t\t\t\ttitle: \"New block\",\r\n\t\t\t},\r\n\t\t};\r\n\t\tlayoutCopy.push(newBlock);\r\n\t\tsetCurrentElem(newBlock);\r\n\t\tsetLayout(layoutCopy, constructorRes);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetInputState({\r\n\t\t\ttitle: currentElem?.content.title ?? \"\",\r\n\t\t\ttext: currentElem?.content.text ?? \"\",\r\n\t\t});\r\n\t\tsetColorState({\r\n\t\t\tfontColor: currentElem?.content.fontColor ?? \"#000000\",\r\n\t\t\tbgColor: currentElem?.content.backgroundColor ?? \"#fffffff\",\r\n\t\t});\r\n\t}, [currentElem]);\r\n\r\n\tconst [inputState, setInputState] = useState({\r\n\t\ttitle: \"\",\r\n\t\ttext: \"\",\r\n\t});\r\n\r\n\tconst [colorState, setColorState] = useState({\r\n\t\tfontColor: \"#000000\",\r\n\t\tbgColor: \"#fffffff\",\r\n\t});\r\n\r\n\tconst saveChanges = () => {\r\n\t\tif (currentElem) {\r\n\t\t\tconst updatedCurrentElem = {\r\n\t\t\t\t...currentElem,\r\n\t\t\t\tcontent: {\r\n\t\t\t\t\tbackgroundColor: colorState.bgColor,\r\n\t\t\t\t\tfontColor: colorState.fontColor,\r\n\t\t\t\t\ttext: inputState.text,\r\n\t\t\t\t\ttitle: inputState.title,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\tconsole.log(updatedCurrentElem);\r\n\r\n\t\t\tsetCurrentElem(updatedCurrentElem);\r\n\r\n\t\t\tconst operatedLayout = [...layout[constructorRes]];\r\n\t\t\tconst indexOfUpdatedElem = operatedLayout.findIndex(\r\n\t\t\t\t(block) => block.i === updatedCurrentElem.i\r\n\t\t\t);\r\n\t\t\tindexOfUpdatedElem !== -1 &&\r\n\t\t\t\toperatedLayout.splice(indexOfUpdatedElem, 1, updatedCurrentElem);\r\n\t\t\tconsole.log(indexOfUpdatedElem);\r\n\t\t\tconsole.log(operatedLayout);\r\n\t\t\tsetLayout(operatedLayout, constructorRes);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button\r\n\t\t\t\tlabel=\"Add block\"\r\n\t\t\t\tclassName=\"p-button-sm p-button-success\"\r\n\t\t\t\tonClick={addNewBlock}\r\n\t\t\t/>\r\n\t\t\t{!currentElem ? (\r\n\t\t\t\t<p>Seems like there is no selected block</p>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"p-fluid p-formgrid p-grid p-mt-3\">\r\n\t\t\t\t\t\t<div className=\"p-field p-col-12\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"title\">Title</label>\r\n\t\t\t\t\t\t\t<InputText\r\n\t\t\t\t\t\t\t\tid=\"title\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={inputState.title}\r\n\t\t\t\t\t\t\t\tonChange={(e: ContolledInput) => {\r\n\t\t\t\t\t\t\t\t\tsetInputState((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\ttitle: e.target.value,\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"p-field p-col-12\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"text\">Text</label>\r\n\t\t\t\t\t\t\t<InputText\r\n\t\t\t\t\t\t\t\tid=\"text\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={inputState.text}\r\n\t\t\t\t\t\t\t\tonChange={(e: ContolledInput) => {\r\n\t\t\t\t\t\t\t\t\tsetInputState((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\ttext: e.target.value,\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"p-field p-col-6\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"font-color\">Font color</label>\r\n\t\t\t\t\t\t\t<ColorPicker\r\n\t\t\t\t\t\t\t\tid=\"font-color\"\r\n\t\t\t\t\t\t\t\tvalue={colorState.fontColor}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\tsetColorState((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\tfontColor: \"#\" + e.value,\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"p-field p-col-6\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"bg-color\">Bg color</label>\r\n\t\t\t\t\t\t\t<ColorPicker\r\n\t\t\t\t\t\t\t\tid=\"bg-color\"\r\n\t\t\t\t\t\t\t\tvalue={colorState.bgColor}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\tsetColorState((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\tbgColor: \"#\" + e.value,\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"p-d-flex p-flex-row-reverse\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tlabel=\"Save\"\r\n\t\t\t\t\t\t\ticon=\"pi pi-check\"\r\n\t\t\t\t\t\t\tclassName=\"p-button-sm\"\r\n\t\t\t\t\t\t\tonClick={saveChanges}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n","import \"./ControlPanel.scss\";\r\nimport { TabView, TabPanel } from \"primereact/tabview\";\r\nimport { useContext, useState } from \"react\";\r\nimport { SizeType } from \"../../hooks/useLayout\";\r\nimport LayoutContext from \"../../context/LayoutContext\";\r\nimport { Controls } from \"../controls/Controls\";\r\n\r\ninterface ITabChangeEvent {\r\n\toriginalEvent: Event;\r\n\tindex: number;\r\n}\r\n\r\ninterface ISizesArray {\r\n\tbreakpoint: SizeType;\r\n\twidth: number;\r\n}\r\n\r\nexport const ControlPanel = () => {\r\n\tconst sizes: ISizesArray[] = [\r\n\t\t{\r\n\t\t\tbreakpoint: \"lg\",\r\n\t\t\twidth: 1200,\r\n\t\t},\r\n\t\t{\r\n\t\t\tbreakpoint: \"md\",\r\n\t\t\twidth: 991,\r\n\t\t},\r\n\t\t{\r\n\t\t\tbreakpoint: \"sm\",\r\n\t\t\twidth: 768,\r\n\t\t},\r\n\t];\r\n\tconst [activeIndex, setActiveIndex] = useState(0);\r\n\tconst {\r\n\t\tsetConstructorRes,\r\n\t\tsetConstructorWidth,\r\n\t\tsetCurrentElem,\r\n\t} = useContext(LayoutContext);\r\n\tconst tabs = [\"Desktop\", \"Tablet\", \"Mobile\"];\r\n\r\n\tconst onTabChange = (e: ITabChangeEvent) => {\r\n\t\tsetActiveIndex(e.index);\r\n\t\tsetConstructorRes(sizes[e.index].breakpoint);\r\n\t\tsetConstructorWidth(sizes[e.index].width);\r\n\t\tsetCurrentElem(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"control\">\r\n\t\t\t<TabView activeIndex={activeIndex} onTabChange={onTabChange}>\r\n\t\t\t\t{tabs.map((tab) => (\r\n\t\t\t\t\t<TabPanel header={tab}>\r\n\t\t\t\t\t\t<Controls />\r\n\t\t\t\t\t</TabPanel>\r\n\t\t\t\t))}\r\n\t\t\t</TabView>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { useContext } from \"react\";\r\nimport ReactGridLayout from \"react-grid-layout\";\r\nimport LayoutContext from \"../../context/LayoutContext\";\r\nimport { ILayout } from \"../../hooks/useLayout\";\r\nimport { Block } from \"../block/Block\";\r\nimport { ControlPanel } from \"../control-panel/ControlPanel\";\r\n\r\nexport const Constructor = () => {\r\n\tconst {\r\n\t\tlayout,\r\n\t\tconstructorRes,\r\n\t\tconstructorWidth,\r\n\t\tsetLayout,\r\n\t\tsetCurrentElem,\r\n\t} = useContext(LayoutContext);\r\n\r\n\tconst getConfiguredLayouts = () => {\r\n\t\treturn layout[constructorRes];\r\n\t};\r\n\r\n\tconst onLayoutChange = (newLayout: ReactGridLayout.Layout[]) => {\r\n\t\tconst layoutCopy: ILayout[] = layout[constructorRes].map((block) => {\r\n\t\t\tconst changedBlock = newLayout.find((nl) => nl.i === block.i);\r\n\t\t\t// I'm too tired to deal with shit like possible changedBlock undefined status\r\n\t\t\treturn {\r\n\t\t\t\ti: changedBlock!.i,\r\n\t\t\t\tcontent: block.content,\r\n\t\t\t\tx: changedBlock!.x,\r\n\t\t\t\ty: changedBlock!.y,\r\n\t\t\t\tw: changedBlock!.w,\r\n\t\t\t\th: changedBlock!.h,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tsetLayout(layoutCopy, constructorRes);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ControlPanel />\r\n\t\t\t<div className=\"constructor\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<strong>{constructorWidth}px</strong>\r\n\t\t\t\t</span>\r\n\t\t\t\t{\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`constructor__grid`}\r\n\t\t\t\t\t\tstyle={{ width: `${constructorWidth}px` }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ReactGridLayout\r\n\t\t\t\t\t\t\tlayout={getConfiguredLayouts()}\r\n\t\t\t\t\t\t\twidth={constructorWidth}\r\n\t\t\t\t\t\t\tcols={12}\r\n\t\t\t\t\t\t\trowHeight={30}\r\n\t\t\t\t\t\t\tisBounded={true}\r\n\t\t\t\t\t\t\tonLayoutChange={onLayoutChange}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{layout[constructorRes].map((block) => (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tkey={block.i}\r\n\t\t\t\t\t\t\t\t\tclassName=\"scroll\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => setCurrentElem(block)}\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Block {...block.content} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ReactGridLayout>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { Header } from \"./modules/header/Header\";\nimport { MenuSidebar } from \"./modules/sidebar/MenuSidebar\";\nimport { Route, Switch } from \"react-router\";\nimport { Preview } from \"./modules/preview/Preview\";\nimport { Constructor } from \"./modules/constructor/Constructor\";\n\nconst App = () => {\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<MenuSidebar />\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact component={Preview} />\n\t\t\t\t<Route path=\"/constructor\" component={Constructor} />\n\t\t\t</Switch>\n\t\t</>\n\t);\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { LayoutState } from \"./context/LayoutContext\";\nimport { ModalsState } from \"./context/ModalsContext\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BrowserRouter>\n\t\t\t<LayoutState>\n\t\t\t\t<ModalsState>\n\t\t\t\t\t<App />\n\t\t\t\t</ModalsState>\n\t\t\t</LayoutState>\n\t\t</BrowserRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}